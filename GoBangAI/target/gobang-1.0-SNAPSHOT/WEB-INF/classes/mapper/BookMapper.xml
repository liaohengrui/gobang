<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.book.dao.BookMapper" >
  <resultMap id="BaseResultMap" type="com.book.domain.po.Book" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="tags" property="tags" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="publisher" property="publisher" jdbcType="VARCHAR" />
    <result column="ISBN" property="isbn" jdbcType="VARCHAR" />
    <result column="publish_date" property="publishDate" jdbcType="TIMESTAMP" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
    <result column="remaining_amount" property="remainingAmount" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="BaseResultMap2" type="java.util.Map" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="book_id" property="bookId" jdbcType="INTEGER" />
    <result column="borrow_date" property="borrowDate" jdbcType="TIMESTAMP" />
    <result column="return_date" property="returnDate" jdbcType="TIMESTAMP" />
    <result column="book_name" property="bookName" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, price, author, description, tags, type, publisher, ISBN, publish_date, 
    create_date, amount, remaining_amount
  </sql>
  <select id="selectBorrowHistory" resultMap="BaseResultMap2">
    select
    ub.id, ub.user_id, ub.book_id, date_format(ub.borrow_date, '%Y-%m-%d %H:%I:%S') borrow_date, if(ub.return_date is null, '未还书', ub.return_date) return_date, b.name book_name, u.name user_name
    from book b, user_book ub, user u
    where b.id = ub.book_id and u.id = ub.user_id and ub.return_date is not null
    <if test="fuzzy != null" >
      and (u.name LIKE #{fuzzy} or
      b.name LIKE #{fuzzy} or
      ub.id LIKE #{fuzzy} or
      date_format(ub.borrow_date, '%Y-%m-%d %H:%I:%S') LIKE #{fuzzy} or
      if(ub.return_date is null, '未还书', ub.return_date) LIKE #{fuzzy})
    </if>
    limit #{start}, #{size}
  </select>
  <select id="selectBorrowHistoryCount" resultType="java.lang.Integer" >
    select
    count(1)
    from book b, user_book ub, user u
    where b.id = ub.book_id and u.id = ub.user_id and ub.return_date is not null
    <if test="fuzzy != null" >
        and (u.name LIKE #{fuzzy} or
        b.name LIKE #{fuzzy} or
        ub.id LIKE #{fuzzy} or
        date_format(ub.borrow_date, '%Y-%m-%d %H:%I:%S') LIKE #{fuzzy} or
        if(ub.return_date is null, '未还书', ub.return_date) LIKE #{fuzzy})
    </if>
  </select>
  <select id="selectNoReturn" resultMap="BaseResultMap2">
    select
    ub.id, ub.user_id, ub.book_id, date_format(ub.borrow_date, '%Y-%m-%d %H:%I:%S') borrow_date, if(ub.return_date is null, '未还书', ub.return_date) return_date, b.name book_name, u.name user_name
    from book b, user_book ub, user u
    where b.id = ub.book_id and u.id = ub.user_id and ub.return_date is null
    <if test="fuzzy != null" >
      and (u.name LIKE #{fuzzy} or
      b.name LIKE #{fuzzy} or
      ub.id LIKE #{fuzzy} or
      date_format(ub.borrow_date, '%Y-%m-%d %H:%I:%S') LIKE #{fuzzy} or
      if(ub.return_date is null, '未还书', ub.return_date) LIKE #{fuzzy})
    </if>
    limit #{start}, #{size}
  </select>
  <select id="selectNoReturnCount" resultType="java.lang.Integer" >
    select
    count(1)
    from book b, user_book ub, user u
    where b.id = ub.book_id and u.id = ub.user_id and ub.return_date is null
    <if test="fuzzy != null" >
      and (u.name LIKE #{fuzzy} or
      b.name LIKE #{fuzzy} or
      ub.id LIKE #{fuzzy} or
      date_format(ub.borrow_date, '%Y-%m-%d %H:%I:%S') LIKE #{fuzzy} or
      if(ub.return_date is null, '未还书', ub.return_date) LIKE #{fuzzy})
    </if>
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from book
    <if test="fuzzy != null" >
      where name LIKE #{fuzzy} or
      author LIKE #{fuzzy} or
      description LIKE #{fuzzy} or
      tags LIKE #{fuzzy} or
      type LIKE #{fuzzy} or
      ISBN LIKE #{fuzzy}
    </if>
    limit #{start}, #{size}
  </select>
  <select id="selectCount" resultType="java.lang.Integer" >
    select
    count(*)
    from book
    <if test="fuzzy != null" >
      where name LIKE #{fuzzy} or
      author LIKE #{fuzzy} or
      description LIKE #{fuzzy} or
      tags LIKE #{fuzzy} or
      type LIKE #{fuzzy} or
      ISBN LIKE #{fuzzy}
    </if>
  </select>
  <select id="selectByISBN" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from book
    where isbn = #{isbn,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from book
    where id = #{id,jdbcType=INTEGER}
  </select>
  <insert id="insertUserBookSelective" parameterType="com.book.domain.po.UserBook" >
    insert into user_book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="borrowDate != null" >
        borrow_date,
      </if>
      <if test="returnDate != null" >
        return_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null" >
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="borrowDate != null" >
        #{borrowDate,jdbcType=TIMESTAMP},
      </if>
      <if test="returnDate != null" >
        #{returnDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.book.domain.po.Book" >
    insert into book (id, name, price, 
      author, description, tags, 
      type, publisher, ISBN, 
      publish_date, create_date, amount, 
      remaining_amount)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, 
      #{author,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{tags,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{publisher,jdbcType=VARCHAR}, #{isbn,jdbcType=VARCHAR}, 
      #{publishDate,jdbcType=TIMESTAMP}, #{createDate,jdbcType=TIMESTAMP}, #{amount,jdbcType=INTEGER}, 
      #{remainingAmount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.book.domain.po.Book" >
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="tags != null" >
        tags,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="publisher != null" >
        publisher,
      </if>
      <if test="isbn != null" >
        ISBN,
      </if>
      <if test="publishDate != null" >
        publish_date,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="remainingAmount != null" >
        remaining_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="tags != null" >
        #{tags,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null" >
        #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null" >
        #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null" >
        #{publishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="remainingAmount != null" >
        #{remainingAmount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.book.domain.po.Book" >
    update book
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="tags != null" >
        tags = #{tags,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null" >
        publisher = #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null" >
        ISBN = #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null" >
        publish_date = #{publishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="remainingAmount != null" >
        remaining_amount = #{remainingAmount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.book.domain.po.Book" >
    update book
    set name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      author = #{author,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      publisher = #{publisher,jdbcType=VARCHAR},
      ISBN = #{isbn,jdbcType=VARCHAR},
      publish_date = #{publishDate,jdbcType=TIMESTAMP},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      amount = #{amount,jdbcType=INTEGER},
      remaining_amount = #{remainingAmount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>